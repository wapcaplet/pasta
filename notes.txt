Realtime editor

Edit code on one side, see the results on the other side.

The "results" depend on what the code is. A transformation is applied to the
code and rendered to the output.

Transformations:

  HTML: Render as-is in an iframe
  SVG: Render as a graphic
  Source code: Here it gets interesting... Several possibilities:
    - Unit/spec tests: Run and display results
    - Executable statements: Run as if from a REPL interface, showing the output
      for each line
    - Function definition with doctests: Run the doctests and show the results
    - Loops: Show variable changes each time through the loop
    - Conditional statements: Show which branch was taken for a specified input
      or set of inputs (either as a doctest, unit test, REPL of some other
      snippet)
  ReST or Markdown: Show parsed/rendered output


Immediate concerns:
-------------------

- TOP PRIORITY: Don't re-render with every keystroke. Accumulate the changes
  over the course of a configurable interval (500ms to several seconds). If no
  changes occur, no refresh happens. If several changes occur during the
  interval, apply them all at once.
- Add file load/save controls
  - (Or, implement a simple server that can watch the file for changes)
  - Automatically set syntax highlighting based on filetype
- Add editor configuration controls


Medium-term concerns:
---------------------

- Make the split adjustable:
  - Hide one panel or the other
  - Move the split
  - Vertical or horizontal split


How does this tie into Pasta?
-----------------------------

Pasta ribbons connect each line or groups of lines to the corresponding sections
in the output (where applicable). Just another "pan" that can unfold alongside a
noodle.

